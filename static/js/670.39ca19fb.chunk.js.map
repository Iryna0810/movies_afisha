{"version":3,"file":"static/js/670.39ca19fb.chunk.js","mappings":"wIAeA,IAbe,WACX,OAAU,SAAC,KAAD,CACMA,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,WAIxE,C,2GCMD,EAd+B,SAACC,GACxB,IAAMC,EAAmB,IAAIC,gBAAgB,CACzCC,QANI,qCASR,IACI,OAAOC,EAAAA,EAAAA,IAAA,UATA,qCASA,YAA2BJ,EAA3B,oBAAgDC,GAK1D,CAFD,MAAOI,GACH,MAAM,IAAIC,MAAMD,EAAME,QACzB,CACR,E,kBC6BD,EA1CgB,WACZ,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOH,EAAP,KAAcQ,EAAd,KACA,GAA8BL,EAAAA,EAAAA,UAAS,IAAvC,eAAOM,EAAP,KAAgBC,EAAhB,KAsBA,OAfAC,EAAAA,EAAAA,YAAU,YALc,WACpB,IAAMC,EAAgBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,eACzDL,GAAiBF,EAAWE,EACnC,CAGGM,GACAX,GAAa,GACTE,GACAU,EAAuBV,GAClBW,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLhB,EAAWgB,EAAKC,QACnB,IACAC,OAAM,SAACvB,GAAD,OAAWQ,EAASR,EAApB,IACNwB,SAAQ,WACLjB,GAAa,EAChB,GAEZ,GAAE,CAACE,KAGA,2BACKH,IAAa,SAACmB,EAAA,EAAD,IACbzB,IAAS,yBAAK,2CACf,wBACKS,GAAWL,EAAQsB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACvB,iBAAkBC,UAAU,cAA5B,WACG,0BAAI,WAASF,MACb,yBAAG,WAASC,OAFLD,EADa,QASvC,C","sources":["components/Loader/Loader.jsx","servises/fetch_movie_current_reviews.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (  <Vortex\n                    visible={true}\n                    height=\"280\"\n                    width=\"280\"\n                    ariaLabel=\"vortex-loading\"\n                    wrapperStyle={{}}\n                    wrapperClass=\"vortex-wrapper\"\n                    colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n                />\n                \n    )\n}\nexport default Loader","import axios from 'axios';\n\nconst API_KEY = '2bcb7fdd81c3309c5e646690433e3287';  \nconst SEARCH_URL = 'https://api.themoviedb.org/3/movie';\n\n\nconst currentFilmInfoReviews = (currentId) => {\n        const searchParameters = new URLSearchParams({\n            api_key: API_KEY\n        });\n\n        try {\n            return axios.get(`${SEARCH_URL}/${currentId}/reviews?${searchParameters}`);\n        }\n        \n        catch (error) {\n            throw new Error(error.message);\n        }\n};\n    \nexport default currentFilmInfoReviews\n\n\n","import { useEffect, useState } from \"react\";\nimport Loader from '../Loader/Loader'\nimport currentFilmInfoReviews from 'servises/fetch_movie_current_reviews'\nimport '../styles.css'\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [movieId, setMovieId] = useState('');\n\n    const getLocalStorage = () => {\n        const parseContacts = JSON.parse(window.localStorage.getItem('movieIdKey'));\n        if (parseContacts) { setMovieId(parseContacts) };\n    }\n\n    useEffect(() => {\n        getLocalStorage();\n        setIsLoading(true);\n        if (movieId) {\n            currentFilmInfoReviews(movieId)\n                .then(({ data }) => {\n                    setReviews(data.results);\n                })\n                .catch((error) => setError(error))\n                .finally(() => {\n                    setIsLoading(false)\n                })\n        }\n    }, [movieId])\n\n    return (\n        <div>\n            {isLoading && <Loader />}\n            {error && <div>Something went wrong. Try again later</div>}\n            <ul>\n                {movieId && reviews.map(({ author, content }) =>\n                (<div key={author} className=\"FilmGallery\">\n                    <h3>Author: {author}</h3>\n                    <p>Review: {content}</p>\n\n                </div>))}\n            </ul>\n        </div>\n    )\n};\n\nexport default Reviews"],"names":["visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","currentId","searchParameters","URLSearchParams","api_key","axios","error","Error","message","useState","reviews","setReviews","isLoading","setIsLoading","setError","movieId","setMovieId","useEffect","parseContacts","JSON","parse","window","localStorage","getItem","getLocalStorage","currentFilmInfoReviews","then","data","results","catch","finally","Loader","map","author","content","className"],"sourceRoot":""}