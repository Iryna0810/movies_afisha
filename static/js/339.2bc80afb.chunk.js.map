{"version":3,"file":"static/js/339.2bc80afb.chunk.js","mappings":"uMAoBA,EAd4B,SAACA,GACrB,IAAMC,EAAmB,IAAIC,gBAAgB,CACzCC,QANI,qCASR,IACI,OAAOC,EAAAA,EAAAA,IAAA,UATA,qCASA,YAA2BJ,EAA3B,oBAAgDC,GAK1D,CAFD,MAAOI,GACH,MAAM,IAAIC,MAAMD,EAAME,QACzB,CACR,E,2BC+BD,EAzCa,WACT,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOH,EAAP,KAAcQ,EAAd,KACA,GAA8BL,EAAAA,EAAAA,UAAS,IAAvC,eAAOM,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAENH,EAAWC,EAASG,OACpBP,GAAa,GACTE,GACAM,EAAoBN,GACfO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLZ,EAAQY,EAAKb,KAChB,IACAc,OAAM,SAAClB,GAAD,OAAWQ,EAASR,EAApB,IACNmB,SAAQ,WACLZ,GAAa,EAChB,GAEZ,GAAE,CAACE,EAASE,EAASG,SAGlB,2BACKR,IAAa,SAACc,EAAA,EAAD,IACbpB,IAAS,yBAAK,2CACf,eAAIqB,UAAU,cAAd,SACKZ,GAAWL,EAAKkB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,UAA9B,OACpB,4BACG,0BAAI,UAAQH,MACZ,0BAAI,cAAYG,MAChB,gBAAKC,IAAG,UAlCf,sCAkCe,YAAgBF,GACpBG,IAAKJ,EACLK,MAAM,YALHN,EADU,QAWpC,C,4CChCD,IAbe,WACX,OAAU,SAAC,KAAD,CACMO,SAAS,EACTC,OAAO,MACPF,MAAM,MACNG,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,WAIxE,C","sources":["servises/fetch_movie_current cast.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2bcb7fdd81c3309c5e646690433e3287';  \nconst SEARCH_URL = 'https://api.themoviedb.org/3/movie';\n\n\nconst currentFilmInfoCast = (currentId) => {\n        const searchParameters = new URLSearchParams({\n            api_key: API_KEY\n        });\n\n        try {\n            return axios.get(`${SEARCH_URL}/${currentId}/credits?${searchParameters}`);\n        }\n        \n        catch (error) {\n            throw new Error(error.message);\n        }\n};\n    \nexport default currentFilmInfoCast\n\n\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport currentFilmInfoCast from 'servises/fetch_movie_current cast'\nimport Loader from '../Loader/Loader'\nimport \"../styles.css\"\n\nconst IMG_URL = `https://image.tmdb.org/t/p/original`\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [movieId, setMovieId] = useState('');\n    const location = useLocation();\n\n    useEffect(() => {\n        // getLocalStorage();\n        setMovieId(location.state);\n        setIsLoading(true);\n        if (movieId) {\n            currentFilmInfoCast(movieId)\n                .then(({ data }) => {\n                    setCast(data.cast);\n                })\n                .catch((error) => setError(error))\n                .finally(() => {\n                    setIsLoading(false)\n                })\n        }\n    }, [movieId, location.state])\n    \n    return (\n        <div>\n            {isLoading && <Loader />}\n            {error && <div>Something went wrong. Try again later</div>}        \n            <ul className=\"FilmGallery\">\n                {movieId && cast.map(({ name, title, profile_path, character }) =>\n                (<div key={name}>\n                    <h3>Actor: {name}</h3>\n                    <h5>Character: {character}</h5>\n                    <img src={`${IMG_URL}/${profile_path}`}\n                        alt={title}\n                        width='150px'></img>\n                </div>)\n                )}\n            </ul>\n        </div>)\n};\n\nexport default Cast","import { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (  <Vortex\n                    visible={true}\n                    height=\"100\"\n                    width=\"100\"\n                    ariaLabel=\"vortex-loading\"\n                    wrapperStyle={{}}\n                    wrapperClass=\"vortex-wrapper\"\n                    colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n                />\n                \n    )\n}\nexport default Loader"],"names":["currentId","searchParameters","URLSearchParams","api_key","axios","error","Error","message","useState","cast","setCast","isLoading","setIsLoading","setError","movieId","setMovieId","location","useLocation","useEffect","state","currentFilmInfoCast","then","data","catch","finally","Loader","className","map","name","title","profile_path","character","src","alt","width","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}